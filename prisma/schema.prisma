// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Enrollment Enrollment[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model Event {
  id                 Int      @id @default(autoincrement())
  title              String   @db.VarChar(255)
  backgroundImageUrl String   @db.VarChar(255)
  logoImageUrl       String   @db.VarChar(255)
  startsAt           DateTime
  endsAt             DateTime
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("events")
}

model Enrollment {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  cpf            String           @db.VarChar(255)
  birthday       DateTime
  phone          String           @db.VarChar(255)
  userId         Int              @unique
  User           User             @relation(fields: [userId], references: [id])
  Address        Address[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  EnrollmentType EnrollmentType[]
  bedId          Int?             @unique
  Beds           Beds?            @relation(fields: [bedId], references: [id])


  @@map("enrollments")
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("addresses")
}

model Type {
  id    Int      @id @default(autoincrement())
  name  String?
  hotel Boolean?

  EnrollmentType EnrollmentType[]
  @@map("type")
}

model EnrollmentType {
  id Int @id @default(autoincrement())

  enrollmentId Int        @unique
  Enrollment   Enrollment @relation(fields: [enrollmentId], references: [id])

  typeId Int
  Type   Type @relation(fields: [typeId], references: [id])

  @@map("enrolmentType")
}

model Hotel {
  id    Int    @id @default(autoincrement())
  name  String @unique
  image String
  Room  Room[]

  @@map("hotels")
}

model Room {
  id     Int    @id @default(autoincrement())
  number String

  hotelId Int
  Hotel   Hotel @relation(fields: [hotelId], references: [id])

  Beds Beds[]
  @@map("rooms")
}

model Beds {
  id         Int          @id @default(autoincrement())
  occupied   Boolean      @default(false)
  roomId     Int
  Room       Room         @relation(fields: [roomId], references: [id])
  Enrollment Enrollment[]

  @@map("beds")
}
